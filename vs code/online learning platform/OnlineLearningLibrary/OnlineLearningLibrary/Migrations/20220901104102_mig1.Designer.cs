// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineLearningLibrary;

#nullable disable

namespace OnlineLearningLibrary.Migrations
{
    [DbContext(typeof(OnlineLearningContext))]
    [Migration("20220901104102_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnlineLearningLibrary.Bookedcourses", b =>
                {
                    b.Property<int>("bookingid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookingid"), 1L, 1);

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<int>("coursescourseid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateofEnroll")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateofexp")
                        .HasColumnType("datetime2");

                    b.Property<int>("studentsstudentid")
                        .HasColumnType("int");

                    b.Property<int>("stuid")
                        .HasColumnType("int");

                    b.HasKey("bookingid");

                    b.HasIndex("coursescourseid");

                    b.HasIndex("studentsstudentid");

                    b.ToTable("Bookedcourses");
                });

            modelBuilder.Entity("OnlineLearningLibrary.Courses", b =>
                {
                    b.Property<int>("courseid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseid"), 1L, 1);

                    b.Property<string>("coursename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("departmentdeptid")
                        .HasColumnType("int");

                    b.Property<int>("deptid")
                        .HasColumnType("int");

                    b.Property<int>("instructorid")
                        .HasColumnType("int");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.HasKey("courseid");

                    b.HasIndex("departmentdeptid");

                    b.HasIndex("instructorid");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("OnlineLearningLibrary.Department", b =>
                {
                    b.Property<int>("deptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("deptid"), 1L, 1);

                    b.Property<string>("deptname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("deptid");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("OnlineLearningLibrary.Instructor", b =>
                {
                    b.Property<int>("instructorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("instructorid"), 1L, 1);

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("yrsOfExp")
                        .HasColumnType("int");

                    b.HasKey("instructorid");

                    b.ToTable("instructors");
                });

            modelBuilder.Entity("OnlineLearningLibrary.Students", b =>
                {
                    b.Property<int>("studentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentid"), 1L, 1);

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("phno")
                        .HasColumnType("bigint");

                    b.HasKey("studentid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("OnlineLearningLibrary.Bookedcourses", b =>
                {
                    b.HasOne("OnlineLearningLibrary.Courses", "courses")
                        .WithMany()
                        .HasForeignKey("coursescourseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineLearningLibrary.Students", "students")
                        .WithMany()
                        .HasForeignKey("studentsstudentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("courses");

                    b.Navigation("students");
                });

            modelBuilder.Entity("OnlineLearningLibrary.Courses", b =>
                {
                    b.HasOne("OnlineLearningLibrary.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentdeptid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineLearningLibrary.Instructor", "instructor")
                        .WithMany()
                        .HasForeignKey("instructorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("instructor");
                });
#pragma warning restore 612, 618
        }
    }
}
